# Path
# ~/.zshrc
# ~/.aliasrc
# ~/.vimrc

# Reference
#colout : text output colorization : https://nojhan.github.io/colout/

../.() {
clear && echo "Reload ZSH..." | colout "(\w|\W)" hash && source ~/.zshrc
}

# Output Colorization

#grepcc() {
#grep --color=always -E "$1|$" $2
#}
#mancc() {
#man $1 | grepc '(^|\s)(\-){1,2}(\w+(\-){0,2}\w*(\-){0,2}\w*={0,1}\w*|\s)'| less -R
#}

#grep
grepc() {
grep -E "$1|$" $2 | colout "^.*$" Random | less -R
}

#man 
manc() {
man $1 | colout "^.*$" Random | less -R
}

#--help
helpc() {
$1 --help | colout "^.*$" Random | less -R
}

#info
infoc() {
info $1 | colout "^.*$" Random | less -R
}




# Docker
container() {
echo docker ps -a --formant "table {{.ID}}\\\t{{.Names}}\\\t{{.Status}}"
docker ps -a --format "table {{.ID}}\t{{.Names}}\t{{.Status}}"
#alias container='echo docker ps -a --formant "table {{.ID}}\\\t{{.Names}}\\\t{{.Status}}";\
#docker ps -a --format "table {{.ID}}\t{{.Names}}\t{{.Status}}"'
}

image() {
echo "docker image list"
docker image list
}

dockerbash() {
echo "docker exec -it $@ bash"	
#docker exec -it $@ bash
eval "$(echo docker exec -it $@ bash)"
} 

alias aliasdocker='echo -e "컨테이너 리스트 - container \n\
이미지리스트 - image \n\
콘테이너 진입 - dockersh <container>"'



# Find
alias fd='fdfind'
finds() {
echo "find / ! \( -path '/mnt' -prune \) -name 'keyword'"
sudo find / ! \( -path '/mnt' -prune \) -name "$1" 2>&1 | grep -v "File system loop detected" | grep -v "Permission denied"
}

fdd() {
echo 'fd --exclude=/mnt -H -td $@'
fd --exclude=/mnt -H -td $@ /
}

fdf() {
echo 'fd --exclude=/mnt -H -tf $@'
fd --exclude=/mnt -H -tf $@ /
}

fde() {
echo 'fd --exclude=/mnt -H -e $@'
fd --exclude=/mnt -H -e $@ /
}

fdfd() {
echo 'fd --exclude=/mnt -H -tf -td $@'
fd --exclude=/mnt -H -tf -td $@ /
}

# double condtion three type example
# | grep -e pattern1 -e pattern2
# | grep pattern1 | grep pattern2
# | grep -e pattern1 -e pattern2
# alias fnd='find / ! \( -path "/mnt" -prune \) -name'
alias aliasfind='echo -e "fdd : Directory : fd --exclucde=/mnt -H -td \$@ \n\
fdf : File : fd --exclucde=/mnt -H -tf \$@ \n\
fde [extension] [keyword] : File Extension : fd --exclude=/mnt -H -e \$1 \$@ \n\
fdfd : File-Directory : fd --exclude=/mnt -H -tf -td \$@ \n\
finds : Find Search : find / ! \( -path "/mnt" -prune \) -name \n\
"'


# Github
cdgit() {
cd ~/.dotfiles/.github/WSL2-Ubuntu/
}

gitpush() {
echo 'pushd ~/.dotfiles/.github/WSL2-Ubuntu/'
pushd ~/.dotfiles/.github/WSL2-Ubuntu/
echo '>> git add .'
git add .
echo -e "\n"'>> git commit -m '\''ubuntu basic configuration file'\'
git commit -m 'ubuntu basic configuration file'
echo -e "\n"'>> git push'
git push
echo -e "\n"'>> git status'
git status
pushd
}

gitremove() {
echo '>> git pull origin main'
git pull origin main
echo -e "\n"'>> git rm '"$@"
git rm $@
echo -e "\n"'>> git commit -m '\''remove '\'"$@"
git commit -m 'remove '"$@"
echo -e "\n"'>> git push origin main'
git push origin main
echo -e "\n"'>> git status'
git status
}

gitproblem() {
echo '>> git config pull.rebase false'
git config pull.rebase false
}

alias push='cdgit && gitpush && ~'

alias aliasgit='echo -e "cdgit : cd ~/.dotfiles/.github/WSL2-Ubuntu/ \n\
gitpush : git add . && git commit -m && git push \n\
gitremove : git pull && git rm (file) && git commit -m && git push origin main \n\
gitproblem : git config pull.rebase false (remote origin branch change import and merge local) \n\
"'


